
Q1 

# master
apt-get update && \
apt-get install -y --allow-change-held-packages kubeadm=1.17.0-00

kubectl drain master --ignore-daemonsets

kubeadm upgrade apply v1.17.0

kubectl uncordon master


apt-get update && \
apt-get install -y --allow-change-held-packages kubelet=1.17.0-00 kubectl=1.17.0-00

sudo systemctl restart kubelet

kubectl drain node01 --ignore-daemonsets


# node01 

ssh node01 
apt-get update && \
apt-get install -y --allow-change-held-packages kubeadm=1.17.0-00


sudo kubeadm upgrade node

apt-get update && \
apt-get install -y --allow-change-held-packages kubelet=1.17.0-00 kubectl=1.17.0-00


sudo systemctl restart kubeletâ€¨
kubectl uncordon node01

----------------------------

Q2

kubectl -n admin2406 get deployments.apps --sort-by .metadata.name -o=custom-columns='DEPLOYMENT:metadata.name,CONTAINER_IMAGE:spec.template.spec.containers[*].image,READY_REPLICAS:status.readyReplicas,NAMESPACE:metadata.namespace' > /opt/admin2406_data

------------------------------

Q3

kubectl config view

# Check the IP and port

------------------------------

Q4

kubectl create deployment nginx-deploy --image=nginx:1.16

kubectl edit deployments.apps nginx-deploy --record
------------------------------

Q5 

kubectl  -n alpha delete pvc alpha-claim

vi alpha-claim.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{},"name":"alpha-claim","namespace":"alpha"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"2Gi"}},"storageClassName":"slow-storage","volumeMode":"Filesystem"}}
  creationTimestamp: "2020-06-23T17:29:57Z"
  finalizers:
  - kubernetes.io/pvc-protection
  name: mysql-alpha-pvc
  namespace: alpha
  resourceVersion: "32843"
  uid: d4f7d491-fe1c-49b3-9f33-6e7e00747128
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: slow
  volumeMode: Filesystem

kubectl create -f alpha-claim.yaml

# check
kubectl -n alpha get deployments.apps --watch

-----------------------------------

Q6

# find cert files
ps aux | grep etcd

# copy-paste cert files into backup command
ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/peer.crt --key=/etc/kubernetes/pki/etcd/peer.key snapshot save /opt/etcd-backup.db

--------------------------------

Q7

apiVersion: v1
kind: Pod
metadata:
  name: secret-1401
  namespace: admin1401
spec:
  containers:
  - name: secret-admin
    image: busybox
    args:
    - sleep
    - "4800"
    volumeMounts:
    - mountPath: /etc/secret-volume
      name: secret-volume
      readOnly: true
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret
